@page "/blog"
@inject HttpClient httpClient
@inject NavigationManager navigationManager 
@inject ISnackbar snackbar

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">

        <meta http-equiv="X-UA-Compatible" content="ie=edge">

        <meta name="copyright" content="MACode ID, https://macodeid.com/">

        <title>One Health - Medical Center HTML5 Template</title>

        <link rel="stylesheet" href="one-health/assets/css/maicons.css">

        <link rel="stylesheet" href="one-health/assets/css/bootstrap.css">

        <link rel="stylesheet" href="one-health/assets/vendor/owl-carousel/css/owl.carousel.css">

        <link rel="stylesheet" href="one-health/assets/vendor/animate/animate.css">

        <link rel="stylesheet" href="one-health/assets/css/theme.css">
    </head>
    <body>

        <MudDialog @bind-IsVisible="visible">
            <TitleContent>
                Add Blog Post
                <MudDivider />
            </TitleContent>
            <DialogContent>
                <MudContainer Style="max-height: 500px; overflow-y: scroll;">
                    <EditForm Model="@input" OnValidSubmit="Submit">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <MudCard>
                            <MudCardContent>
                                <MudTextField Label="Title" Placeholder="Title" HelperText="Min. 10 characters, Max. 100 characters"
                                              @bind-Value="input.Title" For="@(() => input.Title)" />

                                <MudText Typo="Typo.h6">Content</MudText>
                                <RadzenHtmlEditor @bind-Value=@input.Content>
                                    <RadzenHtmlEditorUndo />
                                    <RadzenHtmlEditorRedo />
                                    <RadzenHtmlEditorSeparator />
                                    <RadzenHtmlEditorBold />
                                    <RadzenHtmlEditorItalic />
                                    <RadzenHtmlEditorUnderline />
                                    <RadzenHtmlEditorStrikeThrough />
                                    <RadzenHtmlEditorSeparator />
                                    <RadzenHtmlEditorColor />
                                    <RadzenHtmlEditorBackground />
                                    <RadzenHtmlEditorRemoveFormat />
                                </RadzenHtmlEditor>

                                @if (input.RemoteImageUrl != null)
                                {
                                    <img src="@input.RemoteImageUrl" alt="profile" />
                                }

                                <div class="form-row">
                                    <div class="form-group col-md-10 control-section">
                                        <label class="col-form-label">Upload Image:</label>
                                        <SfUploader ID="UploadFiles" AllowedExtensions=".png,.jpeg,.jpg">
                                            <UploaderEvents ValueChange="OnChange" OnRemove="OnRemove"></UploaderEvents>
                                            <UploaderTemplates>
                                                <Template Context="HttpContext">
                                                    <table>
                                                        <tr>
                                                            <td>
                                                                <img class="upload-image" alt="Preview Image @(HttpContext.Name)"
                                                                     src="@(files.Count > 0 ? files.Where(item=>item.Name == HttpContext.Name)?.FirstOrDefault()?.Path : string.Empty)">
                                                            </td>
                                                            <td>
                                                                <div style="padding: 7px;">
                                                                    <h5 title="@(HttpContext.Name)">@(HttpContext.Name)</h5>
                                                                    <i>@(HttpContext.Size) Bytes</i>
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    </table>
                                                    <span class="e-icons e-file-remove-btn remove" id="removeIcon" title="Remove"></span>
                                                </Template>
                                            </UploaderTemplates>
                                        </SfUploader>
                                    </div>
                                </div>

                                <MudText Typo="Typo.h6">Select Category</MudText>
                                <RadzenDropDown TValue="int" @bind-Value="input.BlogCategoryId" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                Data=@(input.BlogCategories)
                                                TextProperty="Name" ValueProperty="Id" />

                                <MudText Typo="Typo.h6">Select Tags</MudText>
                                <RadzenDropDown TValue="IEnumerable<int>" AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                @bind-Value=@input.TagIds Multiple="true" Placeholder="Select Tags" Data=@(input.Tags) TextProperty="Name" ValueProperty="Id" />
                            </MudCardContent>
                            <MudCardActions>
                                <MudGrid>
                                    <MudItem xs="2">
                                        <MudButton OnClick="this.Cancel" Variant="Variant.Filled" Color="Color.Default" Class="ml-auto">Cancel</MudButton>
                                    </MudItem>
                                    <MudItem xs="6"></MudItem>
                                    <MudItem xs="2">
                                        <MudButton ButtonType="MudBlazor.ButtonType.Submit" Variant="Variant.Filled" Color="Color.Success" Class="ml-auto">Submit</MudButton>
                                    </MudItem>
                                </MudGrid>
                            </MudCardActions>
                        </MudCard>
                    </EditForm>
                </MudContainer>
            </DialogContent>
        </MudDialog>

        <!-- Back to top button -->
        <div class="back-to-top"></div>

        <div class="page-banner overlay-dark bg-image" style="background-image: url(one-health/assets/img/bg_image_1.jpg);">
            <div class="banner-section">
                <div class="container text-center wow fadeInUp">
                    <nav aria-label="Breadcrumb">
                        <ol class="breadcrumb breadcrumb-dark bg-transparent justify-content-center py-0 mb-2">
                            <li class="breadcrumb-item"><a href="/">Home</a></li>
                            <li class="breadcrumb-item active" aria-current="page">Blog</li>
                        </ol>
                    </nav>
                    <h1 class="font-weight-normal">News</h1>
                </div> <!-- .container -->
            </div> <!-- .banner-section -->
        </div> <!-- .page-banner -->

        <MudButton OnClick="this.OpenDialog" Variant="Variant.Filled" Color="Color.Success" Class="w-100 mt-3">Create Blog Post</MudButton>

        <div class="page-section">
            <div class="container">
                <div class="row">
                    <div class="col-lg-8">
                        <div class="row">
                            @foreach (var blogPost in this.blogPosts)
                            {
                                <div class="col-sm-6 py-3">
                                    <div class="card-blog">
                                        <div class="header">
                                            <div class="post-category">
                                                <a href="#">@blogPost.BlogCategoryName</a>
                                            </div>
                                            <a href="blog-details" class="post-thumb">
                                                <img src="@blogPost.RemoteImageUrl" alt="blogPostImage">
                                            </a>
                                        </div>
                                        <div class="body">
                                            <h5 class="post-title"><a @onclick="() => this.NavigateToBlogPostDetails(blogPost.Id)">@blogPost.Title</a></h5>
                                            <div class="site-info">
                                                <div class="avatar mr-2">
                                                    <div class="avatar-img">
                                                        <img src="@blogPost.CreatorRemoteProfileImageUrl" alt="creatorImage">
                                                    </div>
                                                    <span>@blogPost.CreatorFullName</span>
                                                </div>
                                                <span class="mai-time"></span> @blogPost.DifferenceBetweenNowAndCreatedOn
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }

                            <div class="col-12 my-5">
                                
                                <RadzenPager Count="count" PageSize="pageSize" PageNumbersCount="5" PageChanged="@PageChanged" />
                            </div>
                        </div> <!-- .row -->
                    </div>
                    <div class="col-lg-4">
                        <div class="sidebar">
                            <div class="sidebar-block">
                                <h3 class="sidebar-title">Search</h3>
                                <form action="#" class="search-form">
                                    <div class="form-group">
                                        <input type="text" class="form-control" placeholder="Type a keyword and hit enter">
                                        <button type="submit" class="btn"><span class="icon mai-search"></span></button>
                                    </div>
                                </form>
                            </div>
                            <div class="sidebar-block">
                                <h3 class="sidebar-title">Categories</h3>
                                <ul class="categories">
                                    @foreach (var blogCategory in this.blogCategories)
                                    {
                                        <li><a @onclick="() => this.NavigateToPostsByCategoryPage(blogCategory.Id)">@blogCategory.Name <span>@blogCategory.BlogPostsCount</span></a></li>
                                    }
                                </ul>
                            </div>

                            <div class="sidebar-block">
                                <h3 class="sidebar-title">Recent Blog</h3>

                                @foreach (var recentBlogPost in this.recentBlogPosts)
                                {
                                    <div class="blog-item">
                                        <a class="post-thumb" href="">
                                            <img src="@recentBlogPost.RemoteImageUrl" alt="blogPostImage">
                                        </a>
                                        <div class="content">
                                            <h5 class="post-title"><a @onclick="() => this.NavigateToBlogPostDetails(recentBlogPost.Id)">@recentBlogPost.Title</a></h5>
                                            <div class="meta">
                                                <a href="#"><span class="mai-calendar"></span>@recentBlogPost.CreatedOn.ToString("MMMM dd, yyyy")</a>
                                                <a href="#"><span class="mai-person"></span>@recentBlogPost.CreatorFullName</a>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>

                            <div class="sidebar-block">
                                <h3 class="sidebar-title">Tag Cloud</h3>
                                <div class="tagcloud">
                                    @foreach (var tag in this.tags)
                                    {
                                        <a @onclick="() => this.NavigateToPostsByTagPage(tag.Id)" class="tag-cloud-link">@tag.Name</a>
                                    }
                                </div>
                            </div>

                            <div class="sidebar-block">
                                <h3 class="sidebar-title">Paragraph</h3>
                                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ducimus itaque, autem necessitatibus voluptate quod mollitia delectus aut, sunt placeat nam vero culpa sapiente consectetur similique, inventore eos fugit cupiditate numquam!</p>
                            </div>
                        </div>
                    </div>
                </div> <!-- .row -->
            </div> <!-- .container -->
        </div> <!-- .page-section -->

        <div class="page-section banner-home bg-image" style="background-image: url(one-health/assets/img/banner-pattern.svg);">
            <div class="container py-5 py-lg-0">
                <div class="row align-items-center">
                    <div class="col-lg-4 wow zoomIn">
                        <div class="img-banner d-none d-lg-block">
                            <img src="one-health/assets/img/mobile_app.png" alt="">
                        </div>
                    </div>
                    <div class="col-lg-8 wow fadeInRight">
                        <h1 class="font-weight-normal mb-3">Get easy access of all features using One Health Application</h1>
                        <a href="#"><img src="one-health/assets/img/google_play.svg" alt=""></a>
                        <a href="#" class="ml-2"><img src="one-health/assets/img/app_store.svg" alt=""></a>
                    </div>
                </div> <!-- .row -->
            </div> <!-- .container -->
        </div> <!-- .banner-home -->

        <footer class="page-footer">
            <div class="container">
                <div class="row px-md-3">
                    <div class="col-sm-6 col-lg-3 py-3">
                        <h5>Company</h5>
                        <ul class="footer-menu">
                            <li><a href="#">About Us</a></li>
                            <li><a href="#">Career</a></li>
                            <li><a href="#">Editorial Team</a></li>
                            <li><a href="#">Protection</a></li>
                        </ul>
                    </div>
                    <div class="col-sm-6 col-lg-3 py-3">
                        <h5>More</h5>
                        <ul class="footer-menu">
                            <li><a href="#">Terms & Condition</a></li>
                            <li><a href="#">Privacy</a></li>
                            <li><a href="#">Advertise</a></li>
                            <li><a href="#">Join as Doctors</a></li>
                        </ul>
                    </div>
                    <div class="col-sm-6 col-lg-3 py-3">
                        <h5>Our partner</h5>
                        <ul class="footer-menu">
                            <li><a href="#">One-Fitness</a></li>
                            <li><a href="#">One-Drugs</a></li>
                            <li><a href="#">One-Live</a></li>
                        </ul>
                    </div>
                    <div class="col-sm-6 col-lg-3 py-3">
                        <h5>Contact</h5>
                        <p class="footer-link mt-2">351 Willow Street Franklin, MA 02038</p>
                        <a href="#" class="footer-link">701-573-7582</a>
                        <a href="#" class="footer-link">healthcare@temporary.net</a>

                        <h5 class="mt-3">Social Media</h5>
                        <div class="footer-sosmed mt-3">
                            <a href="#" target="_blank"><span class="mai-logo-facebook-f"></span></a>
                            <a href="#" target="_blank"><span class="mai-logo-twitter"></span></a>
                            <a href="#" target="_blank"><span class="mai-logo-google-plus-g"></span></a>
                            <a href="#" target="_blank"><span class="mai-logo-instagram"></span></a>
                            <a href="#" target="_blank"><span class="mai-logo-linkedin"></span></a>
                        </div>
                    </div>
                </div>

                <hr>

                <p id="copyright">Copyright &copy; 2022 <a href="https://macodeid.com/" target="_blank">MACode ID</a>. All right reserved</p>
            </div> <!-- .container -->
        </footer> <!-- .page-footer -->
    </body>

@code {
    private bool visible;
    private void OpenDialog() => this.visible = true;
    private void Cancel() => this.visible = false;

    private int id = 1;
    private int pageSize = 8;
    private int count;

    private CreateBlogPostInputModel input = new CreateBlogPostInputModel();
    private IEnumerable<AllBlogsWithPaginationViewModel> blogPosts = new List<AllBlogsWithPaginationViewModel>();
    private IEnumerable<AllLatestBlogPostsViewModel> recentBlogPosts = new List<AllLatestBlogPostsViewModel>();
    private IEnumerable<AllBlogCategoriesViewModel> blogCategories = new List<AllBlogCategoriesViewModel>();
    private IEnumerable<AllTagsForDropDownViewModel> tags = new List<AllTagsForDropDownViewModel>();

    public MultipartFormDataContent content;
    public string responseStr;
    public HttpResponseMessage filepath { get; set; }
    List<FileInfo> files = new List<FileInfo>();

    public class FileInfo
    {
        public string Path { get; set; }
        public string Name { get; set; }
        public double Size { get; set; }
    }

    public void OnChange(Syncfusion.Blazor.Inputs.UploadChangeEventArgs args)
    {
        files = new List<FileInfo>();
        foreach (var file in args.Files)
        {
            var pathToSave = Path.Combine(Directory.GetCurrentDirectory(), "Images");
            var fullPath = Path.Combine(pathToSave, file.FileInfo.Name);
            byte[] bytes = file.Stream.ToArray();
            string base64 = Convert.ToBase64String(bytes);
            files.Add(new FileInfo() { Path = @"data:image/" + file.FileInfo.Type + ";base64," + base64, Name = file.FileInfo.Name, Size = file.FileInfo.Size });
            content = new MultipartFormDataContent {
                    { new ByteArrayContent(file.Stream.GetBuffer()), "\"upload\"", file.FileInfo.Name }
                };
        }
    }

    public async Task UploadFile(MouseEventArgs args)
    {
        filepath = await this.httpClient.PostAsync("Filesave/Save", content);
        this.responseStr = await filepath.Content.ReadAsStringAsync();
    }

    public void OnRemove(RemovingEventArgs args)
    {
        foreach (var removeFile in args.FilesData)
        {
            if (File.Exists(Path.Combine(@"\Images", removeFile.Name)))
            {
                File.Delete(Path.Combine(@"\Images\", removeFile.Name));
            }
        }
    }

    async Task Submit()
    {
        string path = files.FirstOrDefault()?.Path;
        if (path != null)
        {
            input.RemoteImageUrl = path;
        }

        HttpResponseMessage responseMessage = await this.httpClient.PostAsJsonAsync<CreateBlogPostInputModel>("BlogPosts/Create", input);
        this.blogPosts = await this.httpClient.GetFromJsonAsync<IEnumerable<AllBlogsWithPaginationViewModel>>($"BlogPosts/GetAllWithPagination/{this.id}");
        this.recentBlogPosts = await this.httpClient.GetFromJsonAsync<IEnumerable<AllLatestBlogPostsViewModel>>("BlogPosts/GetAllLatest");
        this.blogCategories = await this.httpClient.GetFromJsonAsync<IEnumerable<AllBlogCategoriesViewModel>>("BlogCategories/GetAll");
        this.Cancel();

        if (responseMessage.IsSuccessStatusCode)
        {
            this.snackbar.Add("Your blog post was created successfully", Severity.Success);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        this.input = await this.httpClient.GetFromJsonAsync<CreateBlogPostInputModel>("BlogPosts/Create");
        this.count = await this.httpClient.GetFromJsonAsync<int>("BlogPosts/GetAllCount");
        this.blogPosts = await this.httpClient.GetFromJsonAsync<IEnumerable<AllBlogsWithPaginationViewModel>>($"BlogPosts/GetAllWithPagination/{this.id}");
        this.recentBlogPosts = await this.httpClient.GetFromJsonAsync<IEnumerable<AllLatestBlogPostsViewModel>>("BlogPosts/GetAllLatest");
        this.blogCategories = await this.httpClient.GetFromJsonAsync<IEnumerable<AllBlogCategoriesViewModel>>("BlogCategories/GetAll");
        this.tags = await this.httpClient.GetFromJsonAsync<IEnumerable<AllTagsForDropDownViewModel>>("Tags/GetAll");
    }

    async Task PageChanged(PagerEventArgs args)
    {
        this.id = (args.Skip / pageSize) + 1;
        this.blogPosts = await this.httpClient.GetFromJsonAsync<IEnumerable<AllBlogsWithPaginationViewModel>>($"BlogPosts/GetAllWithPagination/{this.id}");
    }

    void NavigateToPostsByCategoryPage(int blogCategoryId)
    {
        this.navigationManager.NavigateTo($"/blog/category/{blogCategoryId}");
    }

    void NavigateToPostsByTagPage(int tagId)
    {
        this.navigationManager.NavigateTo($"/blog/tag/{tagId}");
    }

    void NavigateToBlogPostDetails(int blogPostId)
    {
        this.navigationManager.NavigateTo($"/blog/details/{blogPostId}");
    }
} 